// Java/SLF4J/Logback log parser module
declare "java" {
  stage.match {
    pipeline_name = "java"
    selector = "{service_name=\"java\"}"
    
    stage.multiline {
      firstline = "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}\\+\\d{4}\\[[^\\]]+\\]\\s+[A-Z]+\\s+\\w+\\s+-\\s+"
    }

    stage.regex {
      expression = "^(?P<timestamp>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}\\+\\d{4})\\[(?P<thread>[^\\]]+)\\] (?P<level>[A-Z]+)\\s+(?P<logger>[^ ]+) - (?P<msg>[^\n]*)(?:\\n(?P<stacktrace>.*))?"
    }

    // Set the file and level as labels.
    stage.labels {
      values = {
        logger = "",
        level = "",
      }
    }

    // Set the timestamp to the timestamp extracted from the log line.
    stage.timestamp {
      source = "timestamp"
      format = "2006-01-02T15:04:05.000-0700"
    }

    // Set the line number as structured metadata in loki (non-indexed)
    stage.structured_metadata {
      values = {
        thread = "",
        stacktrace = "",
      }
    }

    stage.template {
      source   = "output"
      template = "{{.logger}} - {{.level}} - {{.msg}}"
    }

    stage.output {
      source = "output"
    }    
  }
} 